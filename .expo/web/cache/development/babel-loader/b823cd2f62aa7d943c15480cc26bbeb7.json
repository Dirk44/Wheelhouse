{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { ScaledSheet } from \"react-native-size-matters\";\nimport { Controller } from \"react-hook-form\";\nimport PhoneInput from \"react-native-phone-number-input\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InputField = function InputField(_ref) {\n  var control = _ref.control,\n      name = _ref.name,\n      placeholder = _ref.placeholder,\n      _ref$rules = _ref.rules,\n      rules = _ref$rules === void 0 ? {} : _ref$rules,\n      secureTextEntry = _ref.secureTextEntry,\n      autoCapitalize = _ref.autoCapitalize,\n      keyboardType = _ref.keyboardType;\n  return _jsx(Controller, {\n    control: control,\n    name: name,\n    rules: rules,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          value = _ref2$field.value,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          error = _ref2.fieldState.error;\n      return _jsxs(_Fragment, {\n        children: [_jsx(View, {\n          style: styles.input,\n          children: _jsx(TextInput, {\n            value: value,\n            onChangeText: onChange,\n            onBlur: onBlur,\n            placeholder: placeholder,\n            secureTextEntry: secureTextEntry,\n            autoCapitalize: autoCapitalize,\n            keyboardType: keyboardType,\n            placeholderTextColor: \"#b3b3b3\",\n            fontSize: \"18@s\"\n          })\n        }), error && _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: error.message || \"Error\"\n        })]\n      });\n    }\n  });\n};\n\nvar styles = ScaledSheet.create({\n  input: {\n    justifyContent: \"center\",\n    width: \"75%\",\n    height: \"10%\",\n    backgroundColor: \"#f2f3f5\",\n    borderRadius: \"10@s\",\n    borderColor: \"rgba(37,37,37,255)\",\n    marginTop: \"12@s\",\n    paddingLeft: \"8@s\",\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 0.9,\n    shadowRadius: 10\n  }\n});\nexport default InputField;","map":{"version":3,"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/components/InputField.js"],"names":["React","ScaledSheet","Controller","PhoneInput","InputField","control","name","placeholder","rules","secureTextEntry","autoCapitalize","keyboardType","field","value","onChange","onBlur","error","fieldState","styles","input","color","message","create","justifyContent","width","height","backgroundColor","borderRadius","borderColor","marginTop","paddingLeft","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,UAAP,MAAuB,iCAAvB;;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAQb;AAAA,MAPJC,OAOI,QAPJA,OAOI;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,wBAJJC,KAII;AAAA,MAJJA,KAII,2BAJI,EAIJ;AAAA,MAHJC,eAGI,QAHJA,eAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJC,YACI,QADJA,YACI;AAMJ,SACE,KAAC,UAAD;AACE,IAAA,OAAO,EAAEN,OADX;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,KAAK,EAAEE,KAHT;AAIE,IAAA,MAAM,EAAE;AAAA,8BACNI,KADM;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,QADV,eACUA,QADV;AAAA,UACoBC,MADpB,eACoBA,MADpB;AAAA,UAEQC,KAFR,SAENC,UAFM,CAEQD,KAFR;AAAA,aAIN;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEE,MAAM,CAACC,KAApB;AAAA,oBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEN,KADT;AAEE,YAAA,YAAY,EAAEC,QAFhB;AAGE,YAAA,MAAM,EAAEC,MAHV;AAIE,YAAA,WAAW,EAAER,WAJf;AAKE,YAAA,eAAe,EAAEE,eALnB;AAME,YAAA,cAAc,EAAEC,cANlB;AAOE,YAAA,YAAY,EAAEC,YAPhB;AAQE,YAAA,oBAAoB,EAAC,SARvB;AASE,YAAA,QAAQ,EAAC;AATX;AADF,UADF,EAeGK,KAAK,IACJ,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA,oBAAgCJ,KAAK,CAACK,OAAN,IAAiB;AAAjD,UAhBJ;AAAA,QAJM;AAAA;AAJV,IADF;AA+BD,CA7CD;;AA+CA,IAAMH,MAAM,GAAGjB,WAAW,CAACqB,MAAZ,CAAmB;AAChCH,EAAAA,KAAK,EAAE;AACLI,IAAAA,cAAc,EAAE,QADX;AAELC,IAAAA,KAAK,EAAE,KAFF;AAGLC,IAAAA,MAAM,EAAE,KAHH;AAILC,IAAAA,eAAe,EAAE,SAJZ;AAKLC,IAAAA,YAAY,EAAE,MALT;AAMLC,IAAAA,WAAW,EAAE,oBANR;AAOLC,IAAAA,SAAS,EAAE,MAPN;AAQLC,IAAAA,WAAW,EAAE,KARR;AASLC,IAAAA,WAAW,EAAE,OATR;AAULC,IAAAA,YAAY,EAAE;AAAER,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAVT;AAWLQ,IAAAA,aAAa,EAAE,GAXV;AAYLC,IAAAA,YAAY,EAAE;AAZT;AADyB,CAAnB,CAAf;AAiBA,eAAe9B,UAAf","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  TextInput,\n  View,\n  Text,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport { ScaledSheet } from \"react-native-size-matters\";\nimport { Controller } from \"react-hook-form\";\nimport PhoneInput from \"react-native-phone-number-input\";\n\nconst InputField = ({\n  control,\n  name,\n  placeholder,\n  rules = {},\n  secureTextEntry,\n  autoCapitalize,\n  keyboardType,\n}) => {\n  // const DismissKeyboard = ({ children }) => (\n  //   <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n  //     {children}\n  //   </TouchableWithoutFeedback>\n  // );\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({\n        field: { value, onChange, onBlur },\n        fieldState: { error },\n      }) => (\n        <>\n          <View style={styles.input}>\n            <TextInput\n              value={value}\n              onChangeText={onChange}\n              onBlur={onBlur}\n              placeholder={placeholder}\n              secureTextEntry={secureTextEntry}\n              autoCapitalize={autoCapitalize}\n              keyboardType={keyboardType}\n              placeholderTextColor=\"#b3b3b3\"\n              fontSize=\"18@s\"\n            />\n          </View>\n\n          {error && (\n            <Text style={{ color: \"red\" }}>{error.message || \"Error\"}</Text>\n          )}\n        </>\n      )}\n    />\n  );\n};\n\nconst styles = ScaledSheet.create({\n  input: {\n    justifyContent: \"center\",\n    width: \"75%\",\n    height: \"10%\",\n    backgroundColor: \"#f2f3f5\",\n    borderRadius: \"10@s\",\n    borderColor: \"rgba(37,37,37,255)\",\n    marginTop: \"12@s\",\n    paddingLeft: \"8@s\",\n    shadowColor: \"black\",\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.9,\n    shadowRadius: 10,\n  },\n});\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}