{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Video, AVPlaybackStatus } from \"expo-av\";\nimport movies from \"../components/movies.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction VideoPlayer(props) {\n  var video = React.useRef(null);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  return _jsxs(View, {\n    style: styles.playerWindow,\n    children: [_jsx(Video, {\n      ref: video,\n      style: styles.video,\n      source: {\n        uri: \"\"\n      },\n      posterSource: {},\n      usePoster: true,\n      useNativeControls: true,\n      resizeMode: \"contain\",\n      onPlaybackStatusUpdate: function onPlaybackStatusUpdate(status) {\n        return setStatus(function () {\n          return status;\n        });\n      }\n    }), _jsx(View, {\n      style: styles.buttons,\n      children: _jsx(Button, {\n        title: status.isPlaying ? \"Pause\" : \"Play\",\n        onPress: function onPress() {\n          return status.isPlaying ? video.current.pauseAsync() : video.current.playAsync();\n        }\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  video: {\n    width: \"100%\",\n    aspectRatio: 16 / 9\n  },\n  playerWindow: {\n    marginTop: \"7%\"\n  }\n});\nexport default VideoPlayer;","map":{"version":3,"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/components/VideoPlayer.js"],"names":["React","Video","AVPlaybackStatus","movies","VideoPlayer","props","video","useRef","useState","status","setStatus","styles","playerWindow","uri","buttons","isPlaying","current","pauseAsync","playAsync","StyleSheet","create","width","aspectRatio","marginTop"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,KAAT,EAAgBC,gBAAhB,QAAwC,SAAxC;AACA,OAAOC,MAAP;;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAMC,KAAK,GAAGN,KAAK,CAACO,MAAN,CAAa,IAAb,CAAd;;AACA,wBAA4BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA,eACE,KAAC,KAAD;AACE,MAAA,GAAG,EAAEN,KADP;AAEE,MAAA,KAAK,EAAEK,MAAM,CAACL,KAFhB;AAGE,MAAA,MAAM,EAAE;AACNO,QAAAA,GAAG,EAAE;AADC,OAHV;AAME,MAAA,YAAY,EAAE,EANhB;AAOE,MAAA,SAAS,EAAE,IAPb;AAQE,MAAA,iBAAiB,MARnB;AASE,MAAA,UAAU,EAAC,SATb;AAUE,MAAA,sBAAsB,EAAE,gCAACJ,MAAD;AAAA,eAAYC,SAAS,CAAC;AAAA,iBAAMD,MAAN;AAAA,SAAD,CAArB;AAAA;AAV1B,MADF,EAaE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACG,OAApB;AAAA,gBACE,KAAC,MAAD;AACE,QAAA,KAAK,EAAEL,MAAM,CAACM,SAAP,GAAmB,OAAnB,GAA6B,MADtC;AAEE,QAAA,OAAO,EAAE;AAAA,iBACPN,MAAM,CAACM,SAAP,GACIT,KAAK,CAACU,OAAN,CAAcC,UAAd,EADJ,GAEIX,KAAK,CAACU,OAAN,CAAcE,SAAd,EAHG;AAAA;AAFX;AADF,MAbF;AAAA,IADF;AA0BD;;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,KAAK,EAAE;AACLe,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,WAAW,EAAE,KAAK;AAFb,GADwB;AAK/BV,EAAAA,YAAY,EAAE;AACZW,IAAAA,SAAS,EAAE;AADC;AALiB,CAAlB,CAAf;AASA,eAAenB,WAAf","sourcesContent":["import * as React from \"react\";\nimport { View, StyleSheet, Button } from \"react-native\";\nimport { Video, AVPlaybackStatus } from \"expo-av\";\nimport movies from \"../components/movies.json\";\n\nfunction VideoPlayer(props) {\n  const video = React.useRef(null);\n  const [status, setStatus] = React.useState({});\n  return (\n    <View style={styles.playerWindow}>\n      <Video\n        ref={video}\n        style={styles.video}\n        source={{\n          uri: \"\",\n        }}\n        posterSource={{}}\n        usePoster={true}\n        useNativeControls\n        resizeMode=\"contain\"\n        onPlaybackStatusUpdate={(status) => setStatus(() => status)}\n      />\n      <View style={styles.buttons}>\n        <Button\n          title={status.isPlaying ? \"Pause\" : \"Play\"}\n          onPress={() =>\n            status.isPlaying\n              ? video.current.pauseAsync()\n              : video.current.playAsync()\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  video: {\n    width: \"100%\",\n    aspectRatio: 16 / 9,\n  },\n  playerWindow: {\n    marginTop: \"7%\",\n  },\n});\nexport default VideoPlayer;\n"]},"metadata":{},"sourceType":"module"}