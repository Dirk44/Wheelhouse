{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { InputField, WhButton } from \"../components/\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useForm } from \"react-hook-form\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { Auth } from \"aws-amplify\";\nimport { confirmAccountStyles } from \"../stylesheets\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ConfirmAccount(_ref) {\n  var _route$params;\n\n  var props = _ref.props;\n  var route = useRoute();\n  var navigation = useNavigation();\n\n  var _useForm = useForm({\n    defaultValues: {\n      username: route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.username\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch;\n\n  var username = watch(\"username\");\n\n  var onResendCodePressed = function onResendCodePressed() {\n    return _regeneratorRuntime.async(function onResendCodePressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Auth.resendSignUp(username));\n\n          case 3:\n            Alert.alert(\"Verification code was sent to your email\");\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"Oppsie\", _context.t0.message);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var onVerifyPressed = function onVerifyPressed(data) {\n    var response;\n    return _regeneratorRuntime.async(function onVerifyPressed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Auth.confirmSignUp(data.username, data.verificationCode));\n\n          case 3:\n            response = _context2.sent;\n            Alert.alert(\"Your account has been verified\");\n            console.log(response);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            Alert.alert(\"Oopsie\", _context2.t0.message);\n\n          case 11:\n            navigation.navigate(\"Home\");\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var onBackToSigninPressed = function onBackToSigninPressed() {\n    navigation.navigate(\"SignIn\");\n  };\n\n  return _jsx(SafeAreaView, {\n    style: confirmAccountStyles.container,\n    children: _jsxs(ImageBackground, {\n      style: confirmAccountStyles.background,\n      source: require(\"../assets/landing-page-background.jpg\"),\n      children: [_jsx(Image, {\n        source: require(\"../assets/wh-logo.png\"),\n        style: confirmAccountStyles.whLogo\n      }), _jsx(Text, {\n        style: confirmAccountStyles.loginText,\n        children: \"Verify Account\"\n      }), _jsxs(View, {\n        style: confirmAccountStyles.inputs,\n        children: [_jsx(InputField, {\n          name: \"username\",\n          placeholder: \"Input Verification code\",\n          control: control,\n          rules: {\n            required: \"Must enter Verification code\"\n          },\n          keyboardType: \"decimal-pad\"\n        }), _jsx(InputField, {\n          name: \"verificationCode\",\n          placeholder: \"Input Verification code\",\n          control: control,\n          rules: {\n            required: \"Must enter Verification code\"\n          },\n          keyboardType: \"decimal-pad\"\n        }), _jsx(WhButton, {\n          title: \"Verify\",\n          onPress: handleSubmit(onVerifyPressed)\n        }), _jsx(Text, {\n          style: confirmAccountStyles.signupText,\n          children: \"Resend Code\"\n        }), _jsx(Button, {\n          title: \"Click Here\",\n          onPress: onResendCodePressed\n        }), _jsx(Text, {\n          style: confirmAccountStyles.signupText,\n          children: \"Back to Sign In\"\n        }), _jsx(Button, {\n          title: \"Sign in here\",\n          onPress: onBackToSigninPressed\n        })]\n      })]\n    })\n  });\n}\n\nmodule.exports = ConfirmAccount;","map":{"version":3,"names":["React","useState","InputField","WhButton","useNavigation","useForm","useRoute","Auth","confirmAccountStyles","ConfirmAccount","props","route","navigation","defaultValues","username","params","control","handleSubmit","watch","onResendCodePressed","resendSignUp","Alert","alert","message","onVerifyPressed","data","confirmSignUp","verificationCode","response","console","log","navigate","onBackToSigninPressed","container","background","require","whLogo","loginText","inputs","required","signupText","module","exports"],"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/screens/confirmAccount.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Platform,\n  Text,\n  SafeAreaView,\n  StatusBar,\n  ImageBackground,\n  Image,\n  TouchableOpacity,\n  View,\n  Button,\n  Alert,\n} from \"react-native\";\nimport { InputField, WhButton } from \"../components/\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useForm } from \"react-hook-form\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { Auth } from \"aws-amplify\";\nimport { confirmAccountStyles } from '../stylesheets';\n\nfunction ConfirmAccount({ props }) {\n  const route = useRoute();\n  // const [code, setCode] = useState(\"\");\n  const navigation = useNavigation();\n\n  const { control, handleSubmit, watch } = useForm({\n    defaultValues: { username: route?.params?.username },\n  });\n\n  const username = watch(\"username\");\n\n  const onResendCodePressed = async () => {\n    try {\n      await Auth.resendSignUp(username);\n      Alert.alert(\"Verification code was sent to your email\");\n    } catch (e) {\n      Alert.alert(\"Oppsie\", e.message);\n    }\n  };\n\n  const onVerifyPressed = async (data) => {\n    try {\n      const response = await Auth.confirmSignUp(\n        data.username,\n        data.verificationCode\n      );\n      Alert.alert(\"Your account has been verified\");\n      console.log(response);\n    } catch (e) {\n      Alert.alert(\"Oopsie\", e.message);\n    }\n    navigation.navigate(\"Home\");\n  };\n\n  const onBackToSigninPressed = () => {\n    navigation.navigate(\"SignIn\");\n  };\n\n  return (\n    <SafeAreaView style={confirmAccountStyles.container}>\n      <ImageBackground\n        style={confirmAccountStyles.background}\n        source={require(\"../assets/landing-page-background.jpg\")}\n      >\n        <Image\n          source={require(\"../assets/wh-logo.png\")}\n          style={confirmAccountStyles.whLogo}\n        />\n        <Text style={confirmAccountStyles.loginText}>Verify Account</Text>\n        <View style={confirmAccountStyles.inputs}>\n          <InputField\n            name=\"username\"\n            placeholder=\"Input Verification code\"\n            control={control}\n            rules={{ required: \"Must enter Verification code\" }}\n            keyboardType=\"decimal-pad\"\n          />\n          <InputField\n            name=\"verificationCode\"\n            placeholder=\"Input Verification code\"\n            control={control}\n            rules={{ required: \"Must enter Verification code\" }}\n            keyboardType=\"decimal-pad\"\n          />\n\n          <WhButton title=\"Verify\" onPress={handleSubmit(onVerifyPressed)} />\n\n          <Text style={confirmAccountStyles.signupText}>Resend Code</Text>\n          <Button title=\"Click Here\" onPress={onResendCodePressed} />\n\n          <Text style={confirmAccountStyles.signupText}>Back to Sign In</Text>\n          <Button title=\"Sign in here\" onPress={onBackToSigninPressed} />\n        </View>\n      </ImageBackground>\n    </SafeAreaView>\n  );\n}\n\nmodule.exports = ConfirmAccount;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}