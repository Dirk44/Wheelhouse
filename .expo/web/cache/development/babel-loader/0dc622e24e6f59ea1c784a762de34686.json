{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport InputField from \"../components/InputField\";\nimport WhButton from \"../components/WhButton\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useForm } from \"react-hook-form\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { Auth } from \"aws-amplify\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ConfirmAccount(_ref) {\n  var _route$params;\n\n  var props = _ref.props;\n  var route = useRoute();\n  var navigation = useNavigation();\n\n  var _useForm = useForm({\n    defaultValues: {\n      username: route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.username\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var onResendCodePressed = function onResendCodePressed() {};\n\n  var onVerifyPressed = function onVerifyPressed(data) {\n    var response;\n    return _regeneratorRuntime.async(function onVerifyPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Auth.confirmSignUp(data.username, data.verificationCode));\n\n          case 3:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"Oopsie\", _context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var onBackToSigninPressed = function onBackToSigninPressed() {\n    navigation.navigate(\"SignIn\");\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      style: styles.background,\n      source: require(\"../assets/landing-page-background.jpg\"),\n      children: [_jsx(Image, {\n        source: require(\"../assets/wh-logo.png\"),\n        style: styles.whLogo\n      }), _jsx(Text, {\n        style: styles.loginText,\n        children: \"Verify Account\"\n      }), _jsxs(View, {\n        style: styles.inputs,\n        children: [_jsx(InputField, {\n          name: \"username\",\n          placeholder: \"Input Verification code\",\n          control: control,\n          rules: {\n            required: \"Must enter Verification code\"\n          },\n          keyboardType: \"decimal-pad\"\n        }), _jsx(InputField, {\n          name: \"verificationCode\",\n          placeholder: \"Input Verification code\",\n          control: control,\n          rules: {\n            required: \"Must enter Verification code\"\n          },\n          keyboardType: \"decimal-pad\"\n        }), _jsx(WhButton, {\n          title: \"Verify\",\n          onPress: handleSubmit(onVerifyPressed)\n        }), _jsx(Text, {\n          style: styles.signupText,\n          children: \"Resend Code\"\n        }), _jsx(Button, {\n          title: \"Click Here\",\n          onPress: onResendCodePressed\n        }), _jsx(Text, {\n          style: styles.signupText,\n          children: \"Back to Sign In\"\n        }), _jsx(Button, {\n          title: \"Sign in here\",\n          onPress: onBackToSigninPressed\n        })]\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#000\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  background: {\n    flex: 1,\n    width: \"100%\",\n    height: \"auto\",\n    alignItems: \"center\"\n  },\n  inputs: {\n    width: \"100%\",\n    height: \"50%\",\n    alignItems: \"center\"\n  },\n  loginText: {\n    color: \"white\",\n    fontSize: 30,\n    fontFamily: \"HelveticaRegular\",\n    opacity: 0.9,\n    paddingTop: \"5%\",\n    marginTop: \"18%\",\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10\n  },\n  signUpContainer: {},\n  signupText: {\n    color: \"white\",\n    fontSize: 18,\n    fontFamily: \"HelveticaRegular\",\n    marginTop: \"15%\",\n    opacity: 0.9\n  },\n  whLogo: {\n    width: \"80%\",\n    height: 130,\n    resizeMode: \"contain\",\n    marginTop: \"12%\"\n  }\n});\nexport default ConfirmAccount;","map":{"version":3,"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/screens/confirmAccount.js"],"names":["React","useState","InputField","WhButton","useNavigation","useForm","useRoute","Auth","ConfirmAccount","props","route","navigation","defaultValues","username","params","control","handleSubmit","errors","formState","onResendCodePressed","onVerifyPressed","data","confirmSignUp","verificationCode","response","console","log","Alert","alert","message","onBackToSigninPressed","navigate","styles","container","background","require","whLogo","loginText","inputs","required","signupText","StyleSheet","create","flex","backgroundColor","paddingTop","Platform","OS","StatusBar","currentHeight","width","height","alignItems","color","fontSize","fontFamily","opacity","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","signUpContainer","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Platform,\n  Text,\n  SafeAreaView,\n  StatusBar,\n  ImageBackground,\n  Image,\n  TouchableOpacity,\n  View,\n  Button,\n  Alert,\n} from \"react-native\";\nimport InputField from \"../components/InputField\";\nimport WhButton from \"../components/WhButton\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useForm } from \"react-hook-form\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { Auth } from \"aws-amplify\";\n\nfunction ConfirmAccount({ props }) {\n  const route = useRoute();\n  // const [code, setCode] = useState(\"\");\n  const navigation = useNavigation();\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ defaultValues: { username: route?.params?.username } });\n\n  const onResendCodePressed = () => {};\n  const onVerifyPressed = async (data) => {\n    try {\n      const response = await Auth.confirmSignUp(\n        data.username,\n        data.verificationCode\n      );\n      console.log(response);\n    } catch (e) {\n      Alert.alert(\"Oopsie\", e.message);\n    }\n    // console.warn(data);\n    // navigation.navigate(\"Home\");\n  };\n\n  const onBackToSigninPressed = () => {\n    navigation.navigate(\"SignIn\");\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ImageBackground\n        style={styles.background}\n        source={require(\"../assets/landing-page-background.jpg\")}\n      >\n        <Image\n          source={require(\"../assets/wh-logo.png\")}\n          style={styles.whLogo}\n        />\n        <Text style={styles.loginText}>Verify Account</Text>\n        <View style={styles.inputs}>\n          <InputField\n            name=\"username\"\n            placeholder=\"Input Verification code\"\n            control={control}\n            rules={{ required: \"Must enter Verification code\" }}\n            keyboardType=\"decimal-pad\"\n          />\n          <InputField\n            name=\"verificationCode\"\n            placeholder=\"Input Verification code\"\n            control={control}\n            rules={{ required: \"Must enter Verification code\" }}\n            keyboardType=\"decimal-pad\"\n          />\n\n          <WhButton title=\"Verify\" onPress={handleSubmit(onVerifyPressed)} />\n\n          <Text style={styles.signupText}>Resend Code</Text>\n          <Button title=\"Click Here\" onPress={onResendCodePressed} />\n\n          <Text style={styles.signupText}>Back to Sign In</Text>\n          <Button title=\"Sign in here\" onPress={onBackToSigninPressed} />\n        </View>\n      </ImageBackground>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#000\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n  },\n  background: {\n    flex: 1,\n    width: \"100%\",\n    height: \"auto\",\n    alignItems: \"center\",\n  },\n  inputs: {\n    width: \"100%\",\n    height: \"50%\",\n    alignItems: \"center\",\n  },\n  loginText: {\n    color: \"white\",\n    fontSize: 30,\n    fontFamily: \"HelveticaRegular\",\n    opacity: 0.9,\n    paddingTop: \"5%\",\n    marginTop: \"18%\",\n    shadowColor: \"black\",\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n  },\n  signUpContainer: {},\n  signupText: {\n    color: \"white\",\n    fontSize: 18,\n    fontFamily: \"HelveticaRegular\",\n    marginTop: \"15%\",\n    opacity: 0.9,\n\n    // justifyContent: \"center\",\n    // alignItems: \"center\",\n  },\n  whLogo: {\n    width: \"80%\",\n    height: 130,\n    resizeMode: \"contain\",\n    // position: \"absolute\",\n    marginTop: \"12%\",\n  },\n});\n\nexport default ConfirmAccount;\n"]},"metadata":{},"sourceType":"module"}