{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Controller } from \"react-hook-form\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InputField = function InputField(_ref) {\n  var control = _ref.control,\n      name = _ref.name,\n      placeholder = _ref.placeholder,\n      _ref$rules = _ref.rules,\n      rules = _ref$rules === void 0 ? {} : _ref$rules,\n      secureTextEntry = _ref.secureTextEntry;\n\n  var DismissKeyboard = function DismissKeyboard(_ref2) {\n    var children = _ref2.children;\n    return _jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      },\n      children: children\n    });\n  };\n\n  return _jsx(DismissKeyboard, {\n    children: _jsx(Controller, {\n      control: control,\n      name: name,\n      rules: rules,\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n            value = _ref3$field.value,\n            onChange = _ref3$field.onChange,\n            onBlur = _ref3$field.onBlur,\n            error = _ref3.fieldState.error;\n        return _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: styles.input,\n            children: _jsx(TextInput, {\n              value: value,\n              onChangeText: onChange,\n              onBlur: onBlur,\n              placeholder: placeholder,\n              secureTextEntry: secureTextEntry\n            })\n          }), error && _jsx(Text, {\n            style: {\n              color: \"red\"\n            },\n            children: \"Error MF!\"\n          })]\n        });\n      }\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    justifyContent: \"center\",\n    width: \"75%\",\n    height: \"10%\",\n    backgroundColor: \"#f2f3f5\",\n    borderRadius: 10,\n    borderColor: \"rgba(37,37,37,255)\",\n    fontSize: 20,\n    marginTop: 12,\n    paddingLeft: 8,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 0.9,\n    shadowRadius: 10\n  }\n});\nexport default InputField;","map":{"version":3,"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/components/InputField.js"],"names":["React","Controller","InputField","control","name","placeholder","rules","secureTextEntry","DismissKeyboard","children","Keyboard","dismiss","field","value","onChange","onBlur","error","fieldState","styles","input","color","StyleSheet","create","justifyContent","width","height","backgroundColor","borderRadius","borderColor","fontSize","marginTop","paddingLeft","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,UAAT,QAA2B,iBAA3B;;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAMb;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,wBAFJC,KAEI;AAAA,MAFJA,KAEI,2BAFI,EAEJ;AAAA,MADJC,eACI,QADJA,eACI;;AACJ,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,QAAGC,QAAH,SAAGA,QAAH;AAAA,WACtB,KAAC,wBAAD;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMC,QAAQ,CAACC,OAAT,EAAN;AAAA,OAAnC;AAAA,gBACGF;AADH,MADsB;AAAA,GAAxB;;AAKA,SACE,KAAC,eAAD;AAAA,cACE,KAAC,UAAD;AACE,MAAA,OAAO,EAAEN,OADX;AAEE,MAAA,IAAI,EAAEC,IAFR;AAGE,MAAA,KAAK,EAAEE,KAHT;AAIE,MAAA,MAAM,EAAE;AAAA,gCACNM,KADM;AAAA,YACGC,KADH,eACGA,KADH;AAAA,YACUC,QADV,eACUA,QADV;AAAA,YACoBC,MADpB,eACoBA,MADpB;AAAA,YAEQC,KAFR,SAENC,UAFM,CAEQD,KAFR;AAAA,eAIN;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEE,MAAM,CAACC,KAApB;AAAA,sBACE,KAAC,SAAD;AACE,cAAA,KAAK,EAAEN,KADT;AAEE,cAAA,YAAY,EAAEC,QAFhB;AAGE,cAAA,MAAM,EAAEC,MAHV;AAIE,cAAA,WAAW,EAAEV,WAJf;AAKE,cAAA,eAAe,EAAEE;AALnB;AADF,YADF,EAUGS,KAAK,IAAI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEI,cAAAA,KAAK,EAAE;AAAT,aAAb;AAAA;AAAA,YAVZ;AAAA,UAJM;AAAA;AAJV;AADF,IADF;AA0BD,CAtCD;;AAwCA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,KAAK,EAAE;AACLI,IAAAA,cAAc,EAAE,QADX;AAELC,IAAAA,KAAK,EAAE,KAFF;AAGLC,IAAAA,MAAM,EAAE,KAHH;AAILC,IAAAA,eAAe,EAAE,SAJZ;AAKLC,IAAAA,YAAY,EAAE,EALT;AAMLC,IAAAA,WAAW,EAAE,oBANR;AAOLC,IAAAA,QAAQ,EAAE,EAPL;AAQLC,IAAAA,SAAS,EAAE,EARN;AASLC,IAAAA,WAAW,EAAE,CATR;AAULC,IAAAA,WAAW,EAAE,OAVR;AAWLC,IAAAA,YAAY,EAAE;AAAET,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAXT;AAYLS,IAAAA,aAAa,EAAE,GAZV;AAaLC,IAAAA,YAAY,EAAE;AAbT;AADwB,CAAlB,CAAf;AAkBA,eAAejC,UAAf","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  TextInput,\n  View,\n  Text,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport { Controller } from \"react-hook-form\";\n\nconst InputField = ({\n  control,\n  name,\n  placeholder,\n  rules = {},\n  secureTextEntry,\n}) => {\n  const DismissKeyboard = ({ children }) => (\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n      {children}\n    </TouchableWithoutFeedback>\n  );\n  return (\n    <DismissKeyboard>\n      <Controller\n        control={control}\n        name={name}\n        rules={rules}\n        render={({\n          field: { value, onChange, onBlur },\n          fieldState: { error },\n        }) => (\n          <>\n            <View style={styles.input}>\n              <TextInput\n                value={value}\n                onChangeText={onChange}\n                onBlur={onBlur}\n                placeholder={placeholder}\n                secureTextEntry={secureTextEntry}\n              />\n            </View>\n            {error && <Text style={{ color: \"red\" }}>Error MF!</Text>}\n          </>\n        )}\n      />\n    </DismissKeyboard>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    justifyContent: \"center\",\n    width: \"75%\",\n    height: \"10%\",\n    backgroundColor: \"#f2f3f5\",\n    borderRadius: 10,\n    borderColor: \"rgba(37,37,37,255)\",\n    fontSize: 20,\n    marginTop: 12,\n    paddingLeft: 8,\n    shadowColor: \"black\",\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.9,\n    shadowRadius: 10,\n  },\n});\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}