{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Checkbox from 'expo-checkbox';\nimport { checkboxStyles } from \"../stylesheets\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nmodule.exports = function CheckboxComponent(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isChecked = _useState2[0],\n      setChecked = _useState2[1];\n\n  return _jsx(View, {\n    style: checkboxStyles.container,\n    children: _jsx(Checkbox, {\n      style: checkboxStyles.checkbox,\n      value: isChecked,\n      onValueChange: setChecked\n    })\n  });\n};","map":{"version":3,"names":["React","useState","Ionicons","Checkbox","checkboxStyles","module","exports","CheckboxComponent","isChecked","setChecked","container","checkbox"],"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/components/Checkbox.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Checkbox from 'expo-checkbox';\n\nimport { checkboxStyles } from '../stylesheets';\n\n\n\n\n\n\nmodule.exports = function CheckboxComponent({}) {\n    const [isChecked, setChecked] = useState(false);\n    return (\n        <View style={checkboxStyles.container}>\n            \n\n            <Checkbox style={checkboxStyles.checkbox} \n            value={isChecked} \n            onValueChange={setChecked}\n             />\n        \n        </View>\n    )\n};\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { Pressable, StyleSheet, Text, View } from 'react-native';\n// import Ionicons from '@expo/vector-icons';\n\n// function MyCheckbox() {\n//   const [checked, onChange] = useState(false);\n\n//   function onCheckmarkPress() {\n//     onChange(!checked);\n//   }\n\n//   return (\n//     <Pressable\n//       style={[styles.checkboxBase, checked && styles.checkboxChecked]}\n//       onPress={onCheckmarkPress}>\n//       {checked && <Ionicons name=\"checkmark\" size={24} color=\"white\" />}\n//     </Pressable>\n//   );\n// }\n\n// export default function App() {\n//   return (\n//     <View style={styles.appContainer}>\n//       <Text style={styles.appTitle}>Checkbox Example</Text>\n\n//       <View style={styles.checkboxContainer}>\n//         <MyCheckbox />\n//         <Text style={styles.checkboxLabel}>{`⬅️ Click!`}</Text>\n//       </View>\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   checkboxBase: {\n//     width: 24,\n//     height: 24,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     borderRadius: 4,\n//     borderWidth: 2,\n//     borderColor: 'coral',\n//     backgroundColor: 'transparent',\n//   },\n\n//   checkboxChecked: {\n//     backgroundColor: 'coral',\n//   },\n\n//   appContainer: {\n//     flex: 1,\n//     alignItems: 'center',\n//   },\n\n//   appTitle: {\n//     marginVertical: 16,\n//     fontWeight: 'bold',\n//     fontSize: 24,\n//   },\n\n//   checkboxContainer: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//   },\n\n//   checkboxLabel: {\n//     marginLeft: 8,\n//     fontWeight: 500,\n//     fontSize: 18,\n//   },\n// });"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,SAASC,cAAT;;;AAOAC,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,OAA+B;EAAA;;EAC5C,gBAAgCN,QAAQ,CAAC,KAAD,CAAxC;EAAA;EAAA,IAAOO,SAAP;EAAA,IAAkBC,UAAlB;;EACA,OACI,KAAC,IAAD;IAAM,KAAK,EAAEL,cAAc,CAACM,SAA5B;IAAA,UAGI,KAAC,QAAD;MAAU,KAAK,EAAEN,cAAc,CAACO,QAAhC;MACA,KAAK,EAAEH,SADP;MAEA,aAAa,EAAEC;IAFf;EAHJ,EADJ;AAWH,CAbD"},"metadata":{},"sourceType":"module"}