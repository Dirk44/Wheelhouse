{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Video, AVPlaybackStatus } from \"expo-av\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { NavBar, VideoPlayer, movies } from \"../components/\";\nimport { playClipsScreenStyles } from \"../stylesheets\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction PlayClipsScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var video = React.useRef(null);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  var _route$params = route.params,\n      videoUrl = _route$params.videoUrl,\n      videoPoster = _route$params.videoPoster,\n      videoTitle = _route$params.videoTitle;\n  console.log(videoTitle);\n  return _jsxs(SafeAreaView, {\n    style: playClipsScreenStyles.container,\n    children: [_jsx(NavBar, {}), _jsx(ScrollView, {\n      children: _jsxs(ImageBackground, {\n        style: playClipsScreenStyles.background,\n        source: require(\"../assets/videoPlayerBg.jpg\"),\n        children: [_jsx(Image, {\n          style: playClipsScreenStyles.gladiatorLogo,\n          source: require(\"../assets/gladiatorsLogoSimple.png\")\n        }), _jsx(View, {\n          style: playClipsScreenStyles.playerWindow,\n          children: _jsx(Video, {\n            ref: video,\n            style: playClipsScreenStyles.video,\n            source: {\n              uri: videoUrl\n            },\n            posterSource: {\n              uri: videoPoster\n            },\n            shouldPlay: true,\n            staysActiveInBackground: false,\n            useNativeControls: true,\n            usePoster: true,\n            resizeMode: \"contain\"\n          })\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: playClipsScreenStyles.titleText,\n            children: videoTitle\n          })\n        }), _jsx(View, {\n          style: {\n            width: \"50%\",\n            alignItems: \"center\"\n          },\n          children: _jsx(Image, {\n            style: playClipsScreenStyles.whLogo,\n            source: require(\"../assets/wh-logo.png\")\n          })\n        })]\n      })\n    })]\n  });\n}\n\nmodule.exports = PlayClipsScreen;","map":{"version":3,"names":["React","useEffect","Video","AVPlaybackStatus","useNavigation","NavBar","VideoPlayer","movies","playClipsScreenStyles","PlayClipsScreen","route","navigation","video","useRef","useState","status","setStatus","params","videoUrl","videoPoster","videoTitle","console","log","container","background","require","gladiatorLogo","playerWindow","uri","titleText","width","alignItems","whLogo","module","exports"],"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/screens/playClipsScreen.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  ImageBackground,\n  View,\n  StyleSheet,\n  Image,\n  SafeAreaView,\n  Button,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport { Video, AVPlaybackStatus } from \"expo-av\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { NavBar, VideoPlayer, movies } from \"../components/\";\n// import movies from \"../components/movies.json\";\nimport { playClipsScreenStyles } from \"../stylesheets\";\n\nfunction PlayClipsScreen({ route, navigation }) {\n  const video = React.useRef(null);\n  const [status, setStatus] = React.useState({});\n  const { videoUrl, videoPoster, videoTitle } = route.params;\n  console.log(videoTitle);\n  // useEffect(() => {\n  //   return () => {\n  //     console.log(\"component unmounted\");\n  //     // put actions when screen unmounts\n  //     setStatus((status) => ({ ...status, isPlaying: false }));\n  //   };\n  // }, []);\n\n  return (\n    <SafeAreaView style={playClipsScreenStyles.container}>\n      <NavBar />\n      <ScrollView>\n        <ImageBackground\n          style={playClipsScreenStyles.background}\n          source={require(\"../assets/videoPlayerBg.jpg\")}\n        >\n          <Image\n            style={playClipsScreenStyles.gladiatorLogo}\n            source={require(\"../assets/gladiatorsLogoSimple.png\")}\n          />\n\n          {/* <View style={{ alignItems: \"center\", marginTop: -13 }}>\n            <Text style={playClipsScreenStyles.rentText}>Cumming!!!</Text>\n            <Text style={playClipsScreenStyles.hoursLeft}>\n              You now have <Text style={{ color: \"#0aeeb5\" }}>48 hours</Text>\n              {\"\\n\"} to finish this episode.\n            </Text>\n          </View> */}\n\n          {/* <VideoPlayer /> */}\n          <View style={playClipsScreenStyles.playerWindow}>\n            <Video\n              ref={video}\n              style={playClipsScreenStyles.video}\n              source={{\n                uri: videoUrl,\n              }}\n              posterSource={{\n                uri: videoPoster,\n              }}\n              shouldPlay\n              staysActiveInBackground={false}\n              useNativeControls={true}\n              usePoster\n              resizeMode=\"contain\"\n              // onPlaybackStatusUpdate={(status) => setStatus(() => status)}\n            />\n            {/* <View style={playClipsScreenStyles.buttons}>\n              <Button\n                title={status.isPlaying ? \"Pause\" : \"Play\"}\n                onPress={() =>\n                  status.isPlaying\n                    ? video.current.pauseAsync()\n                    : video.current.playAsync()\n                }\n              />\n            </View> */}\n          </View>\n          <View>\n            <Text style={playClipsScreenStyles.titleText}>{videoTitle}</Text>\n          </View>\n          {/* <View>\n            <TouchableOpacity\n              style={playClipsScreenStyles.buttonStyle}\n              onPress={() =>\n                navigation.navigate(\"Video\", {\n                  videoUrl: props.playVideo,\n                })\n              }\n            >\n              <Text style={playClipsScreenStyles.buttonText}>\n                PLAY UNCUT VERSION\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View>\n            <TouchableOpacity\n              style={playClipsScreenStyles.buttonStyleBlack}\n              onPress={() => navigation.navigate(\"Clips\")}\n            >\n              <Text style={playClipsScreenStyles.buttonText2}>\n                PLAY FAMILY FRIENDLY VERSION\n              </Text>\n            </TouchableOpacity>\n          </View> */}\n          <View style={{ width: \"50%\", alignItems: \"center\" }}>\n            <Image\n              style={playClipsScreenStyles.whLogo}\n              source={require(\"../assets/wh-logo.png\")}\n            ></Image>\n          </View>\n        </ImageBackground>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nmodule.exports = PlayClipsScreen;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;AAYA,SAASC,KAAT,EAAgBC,gBAAhB,QAAwC,SAAxC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,MAA9B;AAEA,SAASC,qBAAT;;;;AAEA,SAASC,eAAT,OAAgD;EAAA,IAArBC,KAAqB,QAArBA,KAAqB;EAAA,IAAdC,UAAc,QAAdA,UAAc;EAC9C,IAAMC,KAAK,GAAGZ,KAAK,CAACa,MAAN,CAAa,IAAb,CAAd;;EACA,sBAA4Bb,KAAK,CAACc,QAAN,CAAe,EAAf,CAA5B;EAAA;EAAA,IAAOC,MAAP;EAAA,IAAeC,SAAf;;EACA,oBAA8CN,KAAK,CAACO,MAApD;EAAA,IAAQC,QAAR,iBAAQA,QAAR;EAAA,IAAkBC,WAAlB,iBAAkBA,WAAlB;EAAA,IAA+BC,UAA/B,iBAA+BA,UAA/B;EACAC,OAAO,CAACC,GAAR,CAAYF,UAAZ;EASA,OACE,MAAC,YAAD;IAAc,KAAK,EAAEZ,qBAAqB,CAACe,SAA3C;IAAA,WACE,KAAC,MAAD,KADF,EAEE,KAAC,UAAD;MAAA,UACE,MAAC,eAAD;QACE,KAAK,EAAEf,qBAAqB,CAACgB,UAD/B;QAEE,MAAM,EAAEC,OAAO,+BAFjB;QAAA,WAIE,KAAC,KAAD;UACE,KAAK,EAAEjB,qBAAqB,CAACkB,aAD/B;UAEE,MAAM,EAAED,OAAO;QAFjB,EAJF,EAkBE,KAAC,IAAD;UAAM,KAAK,EAAEjB,qBAAqB,CAACmB,YAAnC;UAAA,UACE,KAAC,KAAD;YACE,GAAG,EAAEf,KADP;YAEE,KAAK,EAAEJ,qBAAqB,CAACI,KAF/B;YAGE,MAAM,EAAE;cACNgB,GAAG,EAAEV;YADC,CAHV;YAME,YAAY,EAAE;cACZU,GAAG,EAAET;YADO,CANhB;YASE,UAAU,MATZ;YAUE,uBAAuB,EAAE,KAV3B;YAWE,iBAAiB,EAAE,IAXrB;YAYE,SAAS,MAZX;YAaE,UAAU,EAAC;UAbb;QADF,EAlBF,EA8CE,KAAC,IAAD;UAAA,UACE,KAAC,IAAD;YAAM,KAAK,EAAEX,qBAAqB,CAACqB,SAAnC;YAAA,UAA+CT;UAA/C;QADF,EA9CF,EAyEE,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEU,KAAK,EAAE,KAAT;YAAgBC,UAAU,EAAE;UAA5B,CAAb;UAAA,UACE,KAAC,KAAD;YACE,KAAK,EAAEvB,qBAAqB,CAACwB,MAD/B;YAEE,MAAM,EAAEP,OAAO;UAFjB;QADF,EAzEF;MAAA;IADF,EAFF;EAAA,EADF;AAuFD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBzB,eAAjB"},"metadata":{},"sourceType":"module"}