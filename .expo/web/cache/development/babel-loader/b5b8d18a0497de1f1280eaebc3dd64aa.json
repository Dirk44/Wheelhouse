{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport \"react-native-gesture-handler\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { NavigationContainer, StackActions } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./src/aws-exports\";\nimport { useFonts } from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport AuthStack from \"./app/routes/AuthStack\";\nimport Navigator from \"./app/routes/drawer\";\nimport HomePage from \"./app/screens/homePage\";\nimport HomeStack from \"./app/routes/homeStack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nAmplify.configure(_objectSpread(_objectSpread({}, config), {}, {\n  Analytics: {\n    disabled: true\n  }\n}));\n\nvar DismissKeyboard = function DismissKeyboard(_ref) {\n  var children = _ref.children;\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    children: children\n  });\n};\n\nvar App = function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      auth = _useState2[0],\n      setAuth = _useState2[1];\n\n  var _useFonts = useFonts({\n    HelveticaRegular: require(\"./app/assets/fonts/Yantramanav-Black.ttf\"),\n    Helvetica87Bold: require(\"./app/assets/fonts/Montserrat-Black.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      translucent: true,\n      backgroundColor: \"black\"\n    }), _jsx(DismissKeyboard, {\n      children: _jsx(NavigationContainer, {\n        children: !auth ? _jsx(Navigator, {}) : _jsx(AuthStack, {})\n      })\n    })]\n  });\n};\n\nexport default App;","map":{"version":3,"names":["React","useState","NavigationContainer","StackActions","createNativeStackNavigator","Amplify","config","useFonts","AppLoading","AuthStack","Navigator","HomePage","HomeStack","configure","Analytics","disabled","DismissKeyboard","children","Keyboard","dismiss","App","auth","setAuth","HelveticaRegular","require","Helvetica87Bold","fontsLoaded"],"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/App.js"],"sourcesContent":["import \"react-native-gesture-handler\";\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  StatusBar,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport { NavigationContainer, StackActions } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./src/aws-exports\";\nimport { useFonts } from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\n\nimport AuthStack from \"./app/routes/AuthStack\";\nimport Navigator from \"./app/routes/drawer\";\nimport HomePage from \"./app/screens/homePage\";\nimport HomeStack from \"./app/routes/homeStack\";\n\n// console.log(useDeviceOrientation());\nAmplify.configure({\n  ...config,\n  Analytics: {\n    disabled: true,\n  },\n});\n\nconst DismissKeyboard = ({ children }) => (\n  <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n    {children}\n  </TouchableWithoutFeedback>\n);\n\nconst App = () => {\n  // Auth.signOut();\n\n  const [auth, setAuth] = useState(null);\n\n  let [fontsLoaded] = useFonts({\n    HelveticaRegular: require(\"./app/assets/fonts/Yantramanav-Black.ttf\"),\n    Helvetica87Bold: require(\"./app/assets/fonts/Montserrat-Black.ttf\"),\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        translucent={true}\n        backgroundColor=\"black\"\n      />\n      <DismissKeyboard>\n        <NavigationContainer>\n          {/* <AuthStack /> */}\n          {!auth ? <Navigator /> : <AuthStack />}\n        </NavigationContainer>\n      </DismissKeyboard>\n    </>\n    /* <NavigationContainer>\n       <Stack.Navigator screenOptions={{ headerShown: false }}>\n         <Stack.Screen name=\"SignIn\" component={SignIn} />\n        <Stack.Screen name=\"SignUp\" component={SignUp} />\n        <Stack.Screen name=\"SignOut\" component={SignOut} />\n         <Stack.Screen name=\"ForgotPassword\" component={ForgotPassword} />\n         <Stack.Screen name=\"ConfirmAccount\" component={ConfirmAccount} />\n         <Stack.Screen name=\"ResetPassword\" component={ResetPassword} />\n         <Stack.Screen name=\"Home\" component={HomePage} />\n       </Stack.Navigator>\n     </NavigationContainer>  */\n  );\n};\n\nexport default App;\n"],"mappings":";;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAUA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,0BAAlD;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,MAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;;;;AAGAP,OAAO,CAACQ,SAAR,iCACKP,MADL;EAEEQ,SAAS,EAAE;IACTC,QAAQ,EAAE;EADD;AAFb;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;EAAA,IAAGC,QAAH,QAAGA,QAAH;EAAA,OACtB,KAAC,wBAAD;IAA0B,OAAO,EAAE;MAAA,OAAMC,QAAQ,CAACC,OAAT,EAAN;IAAA,CAAnC;IAAA,UACGF;EADH,EADsB;AAAA,CAAxB;;AAMA,IAAMG,GAAG,GAAG,SAANA,GAAM,GAAM;EAGhB,gBAAwBnB,QAAQ,CAAC,IAAD,CAAhC;EAAA;EAAA,IAAOoB,IAAP;EAAA,IAAaC,OAAb;;EAEA,gBAAoBf,QAAQ,CAAC;IAC3BgB,gBAAgB,EAAEC,OAAO,4CADE;IAE3BC,eAAe,EAAED,OAAO;EAFG,CAAD,CAA5B;EAAA;EAAA,IAAKE,WAAL;;EAKA,IAAI,CAACA,WAAL,EAAkB;IAChB,OAAO,KAAC,UAAD,KAAP;EACD;;EAED,OACE;IAAA,WACE,KAAC,SAAD;MACE,QAAQ,EAAC,eADX;MAEE,WAAW,EAAE,IAFf;MAGE,eAAe,EAAC;IAHlB,EADF,EAME,KAAC,eAAD;MAAA,UACE,KAAC,mBAAD;QAAA,UAEG,CAACL,IAAD,GAAQ,KAAC,SAAD,KAAR,GAAwB,KAAC,SAAD;MAF3B;IADF,EANF;EAAA,EADF;AA0BD,CAxCD;;AA0CA,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}