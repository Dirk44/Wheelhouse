{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Controller } from \"react-hook-form\";\nimport PhoneInput from \"react-native-phone-number-input\";\nimport { inputFieldStyles } from \"../stylesheets/\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InputField = function InputField(_ref) {\n  var control = _ref.control,\n      name = _ref.name,\n      placeholder = _ref.placeholder,\n      _ref$rules = _ref.rules,\n      rules = _ref$rules === void 0 ? {} : _ref$rules,\n      secureTextEntry = _ref.secureTextEntry,\n      autoCapitalize = _ref.autoCapitalize,\n      keyboardType = _ref.keyboardType;\n  return _jsx(Controller, {\n    control: control,\n    name: name,\n    rules: rules,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          value = _ref2$field.value,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          error = _ref2.fieldState.error;\n      return _jsxs(_Fragment, {\n        children: [_jsx(View, {\n          style: inputFieldStyles.input,\n          children: _jsx(TextInput, {\n            value: value,\n            onChangeText: onChange,\n            onBlur: onBlur,\n            placeholder: placeholder,\n            secureTextEntry: secureTextEntry,\n            autoCapitalize: autoCapitalize,\n            keyboardType: keyboardType,\n            placeholderTextColor: \"#00aeef\",\n            fontSize: \"18@s\",\n            fontWeight: \"bold\",\n            color: \"white\"\n          })\n        }), error && _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: error.message || \"Error\"\n        })]\n      });\n    }\n  });\n};\n\nmodule.exports = InputField;","map":{"version":3,"names":["React","Controller","PhoneInput","inputFieldStyles","InputField","control","name","placeholder","rules","secureTextEntry","autoCapitalize","keyboardType","field","value","onChange","onBlur","error","fieldState","input","color","message","module","exports"],"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/components/InputField.js"],"sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  TextInput,\n  View,\n  Text,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\n\nimport { Controller } from \"react-hook-form\";\nimport PhoneInput from \"react-native-phone-number-input\";\nimport { inputFieldStyles } from \"../stylesheets/\";\n\nconst InputField = ({\n  control,\n  name,\n  placeholder,\n  rules = {},\n  secureTextEntry,\n  autoCapitalize,\n  keyboardType,\n}) => {\n  // const DismissKeyboard = ({ children }) => (\n  //   <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n  //     {children}\n  //   </TouchableWithoutFeedback>\n  // );\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({\n        field: { value, onChange, onBlur },\n        fieldState: { error },\n      }) => (\n        <>\n          <View style={inputFieldStyles.input}>\n            <TextInput\n              value={value}\n              onChangeText={onChange}\n              onBlur={onBlur}\n              placeholder={placeholder}\n              secureTextEntry={secureTextEntry}\n              autoCapitalize={autoCapitalize}\n              keyboardType={keyboardType}\n              placeholderTextColor=\"#00aeef\"\n              fontSize=\"18@s\"\n              fontWeight=\"bold\"\n              color=\"white\"\n            />\n          </View>\n\n          {error && (\n            <Text style={{ color: \"red\" }}>{error.message || \"Error\"}</Text>\n          )}\n        </>\n      )}\n    />\n  );\n};\n\n\n\nmodule.exports = InputField;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAUA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAASC,gBAAT;;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAQb;EAAA,IAPJC,OAOI,QAPJA,OAOI;EAAA,IANJC,IAMI,QANJA,IAMI;EAAA,IALJC,WAKI,QALJA,WAKI;EAAA,sBAJJC,KAII;EAAA,IAJJA,KAII,2BAJI,EAIJ;EAAA,IAHJC,eAGI,QAHJA,eAGI;EAAA,IAFJC,cAEI,QAFJA,cAEI;EAAA,IADJC,YACI,QADJA,YACI;EAMJ,OACE,KAAC,UAAD;IACE,OAAO,EAAEN,OADX;IAEE,IAAI,EAAEC,IAFR;IAGE,KAAK,EAAEE,KAHT;IAIE,MAAM,EAAE;MAAA,wBACNI,KADM;MAAA,IACGC,KADH,eACGA,KADH;MAAA,IACUC,QADV,eACUA,QADV;MAAA,IACoBC,MADpB,eACoBA,MADpB;MAAA,IAEQC,KAFR,SAENC,UAFM,CAEQD,KAFR;MAAA,OAIN;QAAA,WACE,KAAC,IAAD;UAAM,KAAK,EAAEb,gBAAgB,CAACe,KAA9B;UAAA,UACE,KAAC,SAAD;YACE,KAAK,EAAEL,KADT;YAEE,YAAY,EAAEC,QAFhB;YAGE,MAAM,EAAEC,MAHV;YAIE,WAAW,EAAER,WAJf;YAKE,eAAe,EAAEE,eALnB;YAME,cAAc,EAAEC,cANlB;YAOE,YAAY,EAAEC,YAPhB;YAQE,oBAAoB,EAAC,SARvB;YASE,QAAQ,EAAC,MATX;YAUE,UAAU,EAAC,MAVb;YAWE,KAAK,EAAC;UAXR;QADF,EADF,EAiBGK,KAAK,IACJ,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEG,KAAK,EAAE;UAAT,CAAb;UAAA,UAAgCH,KAAK,CAACI,OAAN,IAAiB;QAAjD,EAlBJ;MAAA,EAJM;IAAA;EAJV,EADF;AAiCD,CA/CD;;AAmDAC,MAAM,CAACC,OAAP,GAAiBlB,UAAjB"},"metadata":{},"sourceType":"module"}