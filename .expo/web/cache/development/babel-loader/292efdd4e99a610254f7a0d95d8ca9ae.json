{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Video, AVPlaybackStatus } from \"expo-av\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { NavBar, VideoPlayer, movies } from \"../components/\";\nimport { playVideoScreenStyles } from \"../stylesheets\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction PlayVideoScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var video = React.useRef(null);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  var _route$params = route.params,\n      videoUrl = _route$params.videoUrl,\n      videoPoster = _route$params.videoPoster,\n      videoTitle = _route$params.videoTitle;\n  console.log(videoTitle);\n  return _jsxs(SafeAreaView, {\n    style: playVideoScreenStyles.container,\n    children: [_jsx(NavBar, {}), _jsx(ScrollView, {\n      children: _jsxs(ImageBackground, {\n        style: playVideoScreenStyles.background,\n        source: require(\"../assets/videoPlayerBg.jpg\"),\n        children: [_jsx(Image, {\n          style: playVideoScreenStyles.gladiatorLogo,\n          source: require(\"../assets/gladiatorsLogoSimple.png\")\n        }), _jsxs(View, {\n          style: {\n            alignItems: \"center\",\n            marginTop: -13\n          },\n          children: [_jsx(Text, {\n            style: playVideoScreenStyles.rentText,\n            children: \"YOUR RENTAL HAS BEEN ACTIVATED!\"\n          }), _jsxs(Text, {\n            style: playVideoScreenStyles.hoursLeft,\n            children: [\"You now have \", _jsx(Text, {\n              style: {\n                color: \"#0aeeb5\"\n              },\n              children: \"48 hours\"\n            }), \"\\n\", \" to finish this episode.\"]\n          })]\n        }), _jsx(View, {\n          style: playVideoScreenStyles.playerWindow,\n          children: _jsx(Video, {\n            ref: video,\n            style: playVideoScreenStyles.video,\n            source: {\n              uri: videoUrl\n            },\n            posterSource: {\n              uri: videoPoster\n            },\n            shouldPlay: true,\n            staysActiveInBackground: false,\n            useNativeControls: true,\n            usePoster: true,\n            resizeMode: \"contain\",\n            onPlaybackStatusUpdate: function onPlaybackStatusUpdate(status) {\n              return setStatus(function () {\n                return status;\n              });\n            }\n          })\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: playVideoScreenStyles.titleText,\n            children: videoTitle\n          })\n        }), _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            style: playVideoScreenStyles.buttonStyle,\n            onPress: function onPress() {\n              return navigation.navigate(\"Video\", {\n                videoUrl: props.playVideo\n              });\n            },\n            children: _jsx(Text, {\n              style: playVideoScreenStyles.buttonText,\n              children: \"PLAY UNCUT VERSION\"\n            })\n          })\n        }), _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            style: playVideoScreenStyles.buttonStyleBlack,\n            onPress: function onPress() {\n              return navigation.navigate(\"Clips\");\n            },\n            children: _jsx(Text, {\n              style: playVideoScreenStyles.buttonText2,\n              children: \"PLAY FAMILY FRIENDLY VERSION\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            width: \"50%\",\n            alignItems: \"center\"\n          },\n          children: _jsx(Image, {\n            style: playVideoScreenStyles.whLogo,\n            source: require(\"../assets/wh-logo.png\")\n          })\n        })]\n      })\n    })]\n  });\n}\n\nmodule.exports = PlayVideoScreen;","map":{"version":3,"names":["React","useEffect","Video","AVPlaybackStatus","useNavigation","NavBar","VideoPlayer","movies","playVideoScreenStyles","PlayVideoScreen","route","navigation","video","useRef","useState","status","setStatus","params","videoUrl","videoPoster","videoTitle","console","log","container","background","require","gladiatorLogo","alignItems","marginTop","rentText","hoursLeft","color","playerWindow","uri","titleText","buttonStyle","navigate","props","playVideo","buttonText","buttonStyleBlack","buttonText2","width","whLogo","module","exports"],"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/screens/playVideoScreen.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  ImageBackground,\n  View,\n  StyleSheet,\n  Image,\n  SafeAreaView,\n  Button,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport { Video, AVPlaybackStatus } from \"expo-av\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { NavBar, VideoPlayer, movies } from \"../components/\";\n// import movies from \"../components/movies.json\";\nimport { playVideoScreenStyles } from \"../stylesheets\";\n\nfunction PlayVideoScreen({ route, navigation }) {\n  const video = React.useRef(null);\n  const [status, setStatus] = React.useState({});\n  const { videoUrl, videoPoster, videoTitle } = route.params;\n  console.log(videoTitle);\n  // useEffect(() => {\n  //   return () => {\n  //     console.log(\"component unmounted\");\n  //     // put actions when screen unmounts\n  //     setStatus((status) => ({ ...status, isPlaying: false }));\n  //   };\n  // }, []);\n\n  return (\n    <SafeAreaView style={playVideoScreenStyles.container}>\n      <NavBar />\n      <ScrollView>\n        <ImageBackground\n          style={playVideoScreenStyles.background}\n          source={require(\"../assets/videoPlayerBg.jpg\")}\n        >\n          <Image\n            style={playVideoScreenStyles.gladiatorLogo}\n            source={require(\"../assets/gladiatorsLogoSimple.png\")}\n          />\n\n          <View style={{ alignItems: \"center\", marginTop: -13 }}>\n            <Text style={playVideoScreenStyles.rentText}>\n              YOUR RENTAL HAS BEEN ACTIVATED!\n            </Text>\n            <Text style={playVideoScreenStyles.hoursLeft}>\n              You now have <Text style={{ color: \"#0aeeb5\" }}>48 hours</Text>\n              {\"\\n\"} to finish this episode.\n            </Text>\n          </View>\n\n          {/* <VideoPlayer /> */}\n          <View style={playVideoScreenStyles.playerWindow}>\n            <Video\n              ref={video}\n              style={playVideoScreenStyles.video}\n              source={{\n                uri: videoUrl,\n              }}\n              posterSource={{\n                uri: videoPoster,\n              }}\n              shouldPlay\n              staysActiveInBackground={false}\n              useNativeControls={true}\n              usePoster\n              resizeMode=\"contain\"\n              onPlaybackStatusUpdate={(status) => setStatus(() => status)}\n            />\n            {/* <View style={playVideoScreenStyles.buttons}>\n              <Button\n                title={status.isPlaying ? \"Pause\" : \"Play\"}\n                onPress={() =>\n                  status.isPlaying\n                    ? video.current.pauseAsync()\n                    : video.current.playAsync()\n                }\n              />\n            </View> */}\n          </View>\n          <View>\n            <Text style={playVideoScreenStyles.titleText}>{videoTitle}</Text>\n          </View>\n          <View>\n            <TouchableOpacity\n              style={playVideoScreenStyles.buttonStyle}\n              onPress={() =>\n                navigation.navigate(\"Video\", {\n                  videoUrl: props.playVideo,\n                })\n              }\n            >\n              <Text style={playVideoScreenStyles.buttonText}>\n                PLAY UNCUT VERSION\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View>\n            <TouchableOpacity\n              style={playVideoScreenStyles.buttonStyleBlack}\n              onPress={() => navigation.navigate(\"Clips\")}\n            >\n              <Text style={playVideoScreenStyles.buttonText2}>\n                PLAY FAMILY FRIENDLY VERSION\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View style={{ width: \"50%\", alignItems: \"center\" }}>\n            <Image\n              style={playVideoScreenStyles.whLogo}\n              source={require(\"../assets/wh-logo.png\")}\n            ></Image>\n          </View>\n        </ImageBackground>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nmodule.exports = PlayVideoScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}