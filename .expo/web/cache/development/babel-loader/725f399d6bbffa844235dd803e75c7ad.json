{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Auth } from \"aws-amplify\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from \"../components/InputField\";\nimport WhButton from \"../components/WhButton\";\nimport PhoneInputField from \"../components/PhoneInputField\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Signup() {\n  var navigation = useNavigation();\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch;\n\n  var pWord = watch(\"password\");\n\n  var onSignUpPressed = function onSignUpPressed(data) {\n    var username, email, password, phone_number, response;\n    return _regeneratorRuntime.async(function onSignUpPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = data.username, email = data.email, password = data.password, phone_number = data.phone_number;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Auth.signUp({\n              username: username,\n              password: password,\n              attributes: {\n                email: email,\n                phone_number: phone_number\n              }\n            }));\n\n          case 4:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            Alert.alert(\"Oopsie\", _context.t0.message);\n            console.log(_context.t0);\n\n          case 12:\n            navigation.navigate(\"ConfirmAccount\", {\n              username: username\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  var onBackToLoginPressed = function onBackToLoginPressed() {\n    navigation.navigate(\"SignIn\");\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      style: styles.background,\n      source: require(\"../assets/landing-page-background.jpg\"),\n      children: [_jsx(Image, {\n        source: require(\"../assets/wh-logo.png\"),\n        style: styles.whLogo\n      }), _jsx(Text, {\n        style: styles.signupText,\n        children: \"Signup\"\n      }), _jsxs(View, {\n        style: styles.inputs,\n        children: [_jsx(InputField, {\n          name: \"username\",\n          placeholder: \"Username\",\n          control: control,\n          rules: {\n            required: \"Username is required\"\n          }\n        }), _jsx(InputField, {\n          name: \"email\",\n          placeholder: \"Email\",\n          control: control,\n          rules: {\n            required: \"Email is required\"\n          },\n          autoCapitalize: \"none\",\n          keyboardType: \"email-address\"\n        }), _jsx(InputField, {\n          name: \"password\",\n          placeholder: \"Password\",\n          control: control,\n          rules: {\n            required: \"Password is required\",\n            minLength: {\n              value: 8,\n              message: \"Password minimum length is 8 characters\"\n            }\n          },\n          secureTextEntry: true\n        }), _jsx(InputField, {\n          name: \"confirm password\",\n          placeholder: \"Confirm Password\",\n          control: control,\n          rules: {\n            validate: function validate(value) {\n              return value === pWord || \"Passwords do not match\";\n            },\n            required: \"Please confirm password\",\n            minLength: {\n              value: 8,\n              message: \"Password minimum length is 8 characters\"\n            }\n          },\n          secureTextEntry: true\n        }), _jsx(PhoneInputField, {\n          name: \"phone_number\",\n          control: control,\n          keyboardType: \"decimal-pad\",\n          defaultCode: \"US\",\n          layout: \"first\",\n          withShadow: true,\n          autoFocus: true,\n          rules: {\n            required: \"Please enter Phone Number\",\n            minLength: {\n              value: 10,\n              message: \"Phone Number must be at least 10 characters\"\n            }\n          }\n        }), _jsx(WhButton, {\n          title: \"Signup\",\n          onPress: handleSubmit(onSignUpPressed)\n        }), _jsx(Text, {\n          style: styles.loginText,\n          children: \"Back to Login\"\n        }), _jsx(Button, {\n          title: \"Click Here\",\n          onPress: onBackToLoginPressed\n        })]\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#000\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  background: {\n    flex: 1,\n    width: \"100%\",\n    height: \"auto\",\n    alignItems: \"center\"\n  },\n  inputs: {\n    width: \"100%\",\n    height: \"50%\",\n    alignItems: \"center\"\n  },\n  input: {\n    justifyContent: \"center\",\n    width: \"75%\",\n    height: \"10%\",\n    backgroundColor: \"#f2f3f5\",\n    borderRadius: 10,\n    borderColor: \"rgba(37,37,37,255)\",\n    fontSize: 20,\n    marginTop: 12,\n    paddingLeft: 8,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 0.9,\n    shadowRadius: 10\n  },\n  signupText: {\n    color: \"white\",\n    fontSize: 30,\n    fontFamily: \"HelveticaRegular\",\n    opacity: 0.9,\n    paddingTop: \"5%\",\n    marginTop: \"18%\"\n  },\n  loginText: {\n    color: \"white\",\n    fontSize: 18,\n    fontFamily: \"HelveticaRegular\",\n    marginTop: \"15%\",\n    opacity: 0.9\n  },\n  whLogo: {\n    width: \"80%\",\n    height: 130,\n    resizeMode: \"contain\",\n    marginTop: \"12%\"\n  }\n});\nexport default Signup;","map":{"version":3,"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/screens/signUp.js"],"names":["React","useState","Auth","useNavigation","useForm","InputField","WhButton","PhoneInputField","Signup","navigation","control","handleSubmit","watch","pWord","onSignUpPressed","data","username","email","password","phone_number","signUp","attributes","response","console","log","Alert","alert","message","navigate","onBackToLoginPressed","styles","container","background","require","whLogo","signupText","inputs","required","minLength","value","validate","loginText","StyleSheet","create","flex","backgroundColor","paddingTop","Platform","OS","StatusBar","currentHeight","width","height","alignItems","input","justifyContent","borderRadius","borderColor","fontSize","marginTop","paddingLeft","shadowColor","shadowOffset","shadowOpacity","shadowRadius","color","fontFamily","opacity","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Platform,\n  Text,\n  SafeAreaView,\n  StatusBar,\n  ImageBackground,\n  Image,\n  TouchableOpacity,\n  View,\n  Button,\n  useWindowDimensions,\n  Alert,\n} from \"react-native\";\nimport { Auth } from \"aws-amplify\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useForm } from \"react-hook-form\";\n\nimport InputField from \"../components/InputField\";\nimport WhButton from \"../components/WhButton\";\nimport PhoneInputField from \"../components/PhoneInputField\";\n\nfunction Signup() {\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const navigation = useNavigation();\n\n  const { control, handleSubmit, watch } = useForm();\n\n  const pWord = watch(\"password\");\n\n  const onSignUpPressed = async (data) => {\n    const { username, email, password, phone_number } = data;\n    try {\n      const response = await Auth.signUp({\n        username,\n        password,\n        attributes: { email, phone_number },\n      });\n      console.log(response);\n    } catch (e) {\n      Alert.alert(\"Oopsie\", e.message);\n      console.log(e);\n    }\n\n    navigation.navigate(\"ConfirmAccount\", { username });\n  };\n\n  const onBackToLoginPressed = () => {\n    navigation.navigate(\"SignIn\");\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ImageBackground\n        style={styles.background}\n        source={require(\"../assets/landing-page-background.jpg\")}\n      >\n        <Image\n          source={require(\"../assets/wh-logo.png\")}\n          style={styles.whLogo}\n        />\n        <Text style={styles.signupText}>Signup</Text>\n        <View style={styles.inputs}>\n          <InputField\n            name=\"username\"\n            placeholder=\"Username\"\n            control={control}\n            rules={{ required: \"Username is required\" }}\n          />\n          <InputField\n            name=\"email\"\n            placeholder=\"Email\"\n            control={control}\n            rules={{ required: \"Email is required\" }}\n            autoCapitalize=\"none\"\n            keyboardType=\"email-address\"\n          />\n          <InputField\n            name=\"password\"\n            placeholder=\"Password\"\n            control={control}\n            rules={{\n              required: \"Password is required\",\n              minLength: {\n                value: 8,\n                message: \"Password minimum length is 8 characters\",\n              },\n            }}\n            secureTextEntry={true}\n          />\n          <InputField\n            name=\"confirm password\"\n            placeholder=\"Confirm Password\"\n            control={control}\n            rules={{\n              validate: (value) => value === pWord || \"Passwords do not match\",\n              required: \"Please confirm password\",\n              minLength: {\n                value: 8,\n                message: \"Password minimum length is 8 characters\",\n              },\n            }}\n            secureTextEntry={true}\n          />\n          <PhoneInputField\n            name=\"phone_number\"\n            // placeholder=\"Phone Number\"\n            control={control}\n            keyboardType=\"decimal-pad\"\n            defaultCode=\"US\"\n            layout=\"first\"\n            withShadow\n            autoFocus\n            rules={{\n              required: \"Please enter Phone Number\",\n              minLength: {\n                value: 10,\n                message: \"Phone Number must be at least 10 characters\",\n              },\n            }}\n          />\n\n          <WhButton title=\"Signup\" onPress={handleSubmit(onSignUpPressed)} />\n          {/* copy props from Whbutton to other buttons */}\n\n          {/* <View style={styles.signUpContainer}> */}\n\n          <Text style={styles.loginText}>Back to Login</Text>\n          <Button title=\"Click Here\" onPress={onBackToLoginPressed} />\n        </View>\n      </ImageBackground>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#000\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n  },\n  background: {\n    flex: 1,\n    width: \"100%\",\n    height: \"auto\",\n    alignItems: \"center\",\n  },\n  inputs: {\n    width: \"100%\",\n    height: \"50%\",\n    alignItems: \"center\",\n  },\n  input: {\n    justifyContent: \"center\",\n    width: \"75%\",\n    height: \"10%\",\n    backgroundColor: \"#f2f3f5\",\n    borderRadius: 10,\n    borderColor: \"rgba(37,37,37,255)\",\n    fontSize: 20,\n    marginTop: 12,\n    paddingLeft: 8,\n    shadowColor: \"black\",\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.9,\n    shadowRadius: 10,\n  },\n  signupText: {\n    color: \"white\",\n    fontSize: 30,\n    fontFamily: \"HelveticaRegular\",\n    opacity: 0.9,\n    paddingTop: \"5%\",\n    marginTop: \"18%\",\n    // shadowColor: \"black\",\n    // shadowOffset: { width: 5, height: 5 },\n    // shadowOpacity: 1,\n    // shadowRadius: 10,\n  },\n  loginText: {\n    color: \"white\",\n    fontSize: 18,\n    fontFamily: \"HelveticaRegular\",\n    marginTop: \"15%\",\n    opacity: 0.9,\n\n    // justifyContent: \"center\",\n    // alignItems: \"center\",\n  },\n  whLogo: {\n    width: \"80%\",\n    height: 130,\n    resizeMode: \"contain\",\n    // position: \"absolute\",\n    marginTop: \"12%\",\n  },\n});\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}