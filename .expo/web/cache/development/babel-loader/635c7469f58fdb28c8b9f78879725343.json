{"ast":null,"code":"import React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Controller } from \"react-hook-form\";\nimport PhoneInput from \"react-native-phone-number-input\";\nimport { phoneInputFieldStyles } from \"../stylesheets/\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PhoneInputField = function PhoneInputField(_ref) {\n  var control = _ref.control,\n      name = _ref.name,\n      placeholder = _ref.placeholder,\n      _ref$rules = _ref.rules,\n      rules = _ref$rules === void 0 ? {} : _ref$rules,\n      secureTextEntry = _ref.secureTextEntry,\n      autoCapitalize = _ref.autoCapitalize,\n      keyboardType = _ref.keyboardType;\n  return _jsx(Controller, {\n    control: control,\n    name: name,\n    rules: rules,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          value = _ref2$field.value,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          error = _ref2.fieldState.error;\n      return _jsxs(_Fragment, {\n        children: [_jsx(PhoneInput, {\n          value: value,\n          onChange: onChange,\n          onBlur: onBlur,\n          placeholder: placeholder,\n          keyboardType: keyboardType,\n          defaultCode: \"US\",\n          layout: \"first\",\n          withShadow: true,\n          autoFocus: true,\n          containerStyle: phoneInputFieldStyles.input,\n          textContainerStyle: {\n            paddingVertical: 0,\n            borderRadius: 10\n          }\n        }), error && _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: error.message || \"Error\"\n        })]\n      });\n    }\n  });\n};\n\nmodule.exports = PhoneInputField;","map":{"version":3,"names":["React","Controller","PhoneInput","phoneInputFieldStyles","PhoneInputField","control","name","placeholder","rules","secureTextEntry","autoCapitalize","keyboardType","field","value","onChange","onBlur","error","fieldState","input","paddingVertical","borderRadius","color","message","module","exports"],"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/components/PhoneInputField.js"],"sourcesContent":["import React from \"react\";\nimport {\n  TextInput,\n  View,\n  Text,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport { Controller } from \"react-hook-form\";\nimport PhoneInput from \"react-native-phone-number-input\";\nimport { phoneInputFieldStyles } from \"../stylesheets/\";\n\nconst PhoneInputField = ({\n  control,\n  name,\n  placeholder,\n  rules = {},\n  secureTextEntry,\n  autoCapitalize,\n  keyboardType,\n}) => {\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({\n        field: { value, onChange, onBlur },\n        fieldState: { error },\n      }) => (\n        <>\n          <PhoneInput\n            value={value}\n            // formattedValue={formattedValue}\n            onChange={onChange}\n            onBlur={onBlur}\n            placeholder={placeholder}\n            keyboardType={keyboardType}\n            defaultCode=\"US\"\n            layout=\"first\"\n            withShadow\n            autoFocus\n            containerStyle={phoneInputFieldStyles.input}\n            textContainerStyle={{\n              paddingVertical: 0,\n              borderRadius: 10,\n            }}\n          />\n\n          {error && (\n            <Text style={{ color: \"red\" }}>{error.message || \"Error\"}</Text>\n          )}\n        </>\n      )}\n    />\n  );\n};\n\n\n\nmodule.exports = PhoneInputField;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAASC,qBAAT;;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAQlB;EAAA,IAPJC,OAOI,QAPJA,OAOI;EAAA,IANJC,IAMI,QANJA,IAMI;EAAA,IALJC,WAKI,QALJA,WAKI;EAAA,sBAJJC,KAII;EAAA,IAJJA,KAII,2BAJI,EAIJ;EAAA,IAHJC,eAGI,QAHJA,eAGI;EAAA,IAFJC,cAEI,QAFJA,cAEI;EAAA,IADJC,YACI,QADJA,YACI;EACJ,OACE,KAAC,UAAD;IACE,OAAO,EAAEN,OADX;IAEE,IAAI,EAAEC,IAFR;IAGE,KAAK,EAAEE,KAHT;IAIE,MAAM,EAAE;MAAA,wBACNI,KADM;MAAA,IACGC,KADH,eACGA,KADH;MAAA,IACUC,QADV,eACUA,QADV;MAAA,IACoBC,MADpB,eACoBA,MADpB;MAAA,IAEQC,KAFR,SAENC,UAFM,CAEQD,KAFR;MAAA,OAIN;QAAA,WACE,KAAC,UAAD;UACE,KAAK,EAAEH,KADT;UAGE,QAAQ,EAAEC,QAHZ;UAIE,MAAM,EAAEC,MAJV;UAKE,WAAW,EAAER,WALf;UAME,YAAY,EAAEI,YANhB;UAOE,WAAW,EAAC,IAPd;UAQE,MAAM,EAAC,OART;UASE,UAAU,MATZ;UAUE,SAAS,MAVX;UAWE,cAAc,EAAER,qBAAqB,CAACe,KAXxC;UAYE,kBAAkB,EAAE;YAClBC,eAAe,EAAE,CADC;YAElBC,YAAY,EAAE;UAFI;QAZtB,EADF,EAmBGJ,KAAK,IACJ,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEK,KAAK,EAAE;UAAT,CAAb;UAAA,UAAgCL,KAAK,CAACM,OAAN,IAAiB;QAAjD,EApBJ;MAAA,EAJM;IAAA;EAJV,EADF;AAmCD,CA5CD;;AAgDAC,MAAM,CAACC,OAAP,GAAiBpB,eAAjB"},"metadata":{},"sourceType":"module"}