{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Auth } from \"aws-amplify\";\nimport InputField from \"../components/InputField\";\nimport WhButton from \"../components/WhButton\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9]+)*$/;\n\nfunction SignIn(_ref) {\n  var props = _ref.props;\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  console.log(errors);\n\n  var onLoginPressed = function onLoginPressed(data) {\n    var response;\n    return _regeneratorRuntime.async(function onLoginPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            setLoading(true);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(Auth.signIn(data.email, data.password));\n\n          case 6:\n            response = _context.sent;\n            console.log(response);\n            navigation.navigate(\"Home\");\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](3);\n            Alert.alert(\"Oopsie, \", _context.t0.message);\n\n          case 14:\n            setLoading(false);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 11]], Promise);\n  };\n\n  var onForgotPasswordPressed = function onForgotPasswordPressed() {\n    navigation.navigate(\"ForgotPassword\");\n  };\n\n  var onSignUpPressed = function onSignUpPressed() {\n    navigation.navigate(\"SignUp\");\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      style: styles.background,\n      source: require(\"../assets/landing-page-background.jpg\"),\n      children: [_jsx(Image, {\n        source: require(\"../assets/wh-logo.png\"),\n        style: styles.whLogo\n      }), _jsx(Text, {\n        style: styles.loginText,\n        children: \"Login\"\n      }), _jsxs(View, {\n        style: styles.inputs,\n        children: [_jsx(InputField, {\n          name: \"email\",\n          placeholder: \"Email\",\n          control: control,\n          rules: {\n            required: \"Email is required\",\n            pattern: {\n              value: EMAIL_REGEX,\n              message: \"Must be a valid Email\"\n            }\n          },\n          autoCapitalize: \"none\",\n          keyboardType: \"email-address\"\n        }), _jsx(InputField, {\n          name: \"password\",\n          placeholder: \"Password\",\n          control: control,\n          rules: {\n            required: \"Password is required\",\n            minLength: {\n              value: 8,\n              message: \"Password minimum length is 8 characters\"\n            }\n          },\n          secureTextEntry: true\n        }), _jsx(WhButton, {\n          title: loading ? \"loading...\" : \"Login\",\n          onPress: handleSubmit(onLoginPressed)\n        }), _jsx(Text, {\n          style: styles.signupText,\n          children: \"Forgot Password?\"\n        }), _jsx(Button, {\n          title: \"Click Here\",\n          onPress: onForgotPasswordPressed\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.signupText,\n            children: \"Haven't signed up?\"\n          }), _jsx(Button, {\n            style: styles.signupText,\n            title: \"Sign up here\",\n            onPress: onSignUpPressed\n          })]\n        })]\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#000\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  background: {\n    flex: 1,\n    width: \"100%\",\n    height: \"auto\",\n    alignItems: \"center\"\n  },\n  inputs: {\n    width: \"100%\",\n    height: \"50%\",\n    alignItems: \"center\",\n    marginTop: \"5%\"\n  },\n  loginText: {\n    color: \"white\",\n    fontSize: 30,\n    fontFamily: \"HelveticaRegular\",\n    opacity: 0.9,\n    paddingTop: \"5%\",\n    marginTop: \"18%\"\n  },\n  signupText: {\n    color: \"white\",\n    fontSize: 18,\n    fontFamily: \"HelveticaRegular\",\n    marginTop: \"8%\",\n    opacity: 0.9\n  },\n  whLogo: {\n    width: \"80%\",\n    height: 130,\n    resizeMode: \"contain\",\n    marginTop: \"12%\"\n  }\n});\nexport default SignIn;","map":{"version":3,"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/screens/signIn.js"],"names":["React","useState","Auth","InputField","WhButton","NavigationContainer","useNavigation","useForm","Controller","EMAIL_REGEX","SignIn","props","navigation","loading","setLoading","control","handleSubmit","errors","formState","console","log","onLoginPressed","data","signIn","email","password","response","navigate","Alert","alert","message","onForgotPasswordPressed","onSignUpPressed","styles","container","background","require","whLogo","loginText","inputs","required","pattern","value","minLength","signupText","StyleSheet","create","flex","backgroundColor","paddingTop","Platform","OS","StatusBar","currentHeight","width","height","alignItems","marginTop","color","fontSize","fontFamily","opacity","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Platform,\n  Text,\n  SafeAreaView,\n  StatusBar,\n  ImageBackground,\n  Image,\n  TouchableOpacity,\n  View,\n  Button,\n  Alert,\n} from \"react-native\";\n\nimport { Auth } from \"aws-amplify\";\n\nimport InputField from \"../components/InputField\";\nimport WhButton from \"../components/WhButton\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nconst EMAIL_REGEX =\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9]+)*$/;\n\nfunction SignIn({ props }) {\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  const navigation = useNavigation();\n  const [loading, setLoading] = useState(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  console.log(errors);\n\n  const onLoginPressed = async (data) => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await Auth.signIn(data.email, data.password);\n      console.log(response);\n      navigation.navigate(\"Home\");\n    } catch (e) {\n      Alert.alert(\"Oopsie, \", e.message);\n    }\n    setLoading(false);\n  };\n\n  const onForgotPasswordPressed = () => {\n    navigation.navigate(\"ForgotPassword\");\n  };\n  const onSignUpPressed = () => {\n    navigation.navigate(\"SignUp\");\n  };\n  return (\n    <SafeAreaView style={styles.container}>\n      <ImageBackground\n        style={styles.background}\n        source={require(\"../assets/landing-page-background.jpg\")}\n      >\n        <Image\n          source={require(\"../assets/wh-logo.png\")}\n          style={styles.whLogo}\n        />\n        <Text style={styles.loginText}>Login</Text>\n        <View style={styles.inputs}>\n          <InputField\n            name=\"email\"\n            placeholder=\"Email\"\n            control={control}\n            rules={{\n              required: \"Email is required\",\n              pattern: { value: EMAIL_REGEX, message: \"Must be a valid Email\" },\n            }}\n            autoCapitalize=\"none\"\n            keyboardType=\"email-address\"\n          />\n\n          <InputField\n            name=\"password\"\n            placeholder=\"Password\"\n            control={control}\n            rules={{\n              required: \"Password is required\",\n              minLength: {\n                value: 8,\n                message: \"Password minimum length is 8 characters\",\n              },\n            }}\n            secureTextEntry\n          />\n          <WhButton\n            title={loading ? \"loading...\" : \"Login\"}\n            onPress={handleSubmit(onLoginPressed)}\n          />\n          {/* <View style={styles.signUpContainer}> */}\n\n          <Text style={styles.signupText}>Forgot Password?</Text>\n          <Button title=\"Click Here\" onPress={onForgotPasswordPressed} />\n          <View>\n            <Text style={styles.signupText}>Haven't signed up?</Text>\n            <Button\n              style={styles.signupText}\n              title=\"Sign up here\"\n              onPress={onSignUpPressed}\n            />\n          </View>\n        </View>\n      </ImageBackground>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#000\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n  },\n  background: {\n    flex: 1,\n    width: \"100%\",\n    height: \"auto\",\n    alignItems: \"center\",\n  },\n  inputs: {\n    width: \"100%\",\n    height: \"50%\",\n    alignItems: \"center\",\n    marginTop: \"5%\",\n  },\n  loginText: {\n    color: \"white\",\n    fontSize: 30,\n    fontFamily: \"HelveticaRegular\",\n    opacity: 0.9,\n    paddingTop: \"5%\",\n    marginTop: \"18%\",\n  },\n  signupText: {\n    color: \"white\",\n    fontSize: 18,\n    fontFamily: \"HelveticaRegular\",\n    marginTop: \"8%\",\n    opacity: 0.9,\n\n    // justifyContent: \"center\",\n    // alignItems: \"center\",\n  },\n  whLogo: {\n    width: \"80%\",\n    height: 130,\n    resizeMode: \"contain\",\n    // position: \"absolute\",\n    marginTop: \"12%\",\n  },\n});\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}