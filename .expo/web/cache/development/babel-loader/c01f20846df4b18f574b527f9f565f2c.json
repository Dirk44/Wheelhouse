{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Controller } from \"react-hook-form\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar InputField = function InputField(_ref) {\n  var control = _ref.control,\n      name = _ref.name,\n      placeholder = _ref.placeholder,\n      _ref$rules = _ref.rules,\n      rules = _ref$rules === void 0 ? {} : _ref$rules,\n      secureTextEntry = _ref.secureTextEntry;\n  return _jsx(Controller, {\n    control: control,\n    name: name,\n    rules: rules,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          value = _ref2$field.value,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          error = _ref2.fieldState.error;\n      return _jsx(View, {\n        style: [styles.input, {\n          borderColor: error ? \"red\" : \"blue\"\n        }],\n        children: _jsx(TextInput, {\n          value: value,\n          onChangeText: onChange,\n          onBlur: onBlur,\n          placeholder: placeholder,\n          secureTextEntry: secureTextEntry\n        })\n      });\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    justifyContent: \"center\",\n    width: \"75%\",\n    height: \"10%\",\n    backgroundColor: \"#f2f3f5\",\n    borderRadius: 10,\n    borderColor: \"rgba(37,37,37,255)\",\n    fontSize: 20,\n    marginTop: 12,\n    paddingLeft: 8,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 0.9,\n    shadowRadius: 10\n  }\n});\nexport default InputField;","map":{"version":3,"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/components/InputField.js"],"names":["React","Controller","InputField","control","name","placeholder","rules","secureTextEntry","field","value","onChange","onBlur","error","fieldState","styles","input","borderColor","StyleSheet","create","justifyContent","width","height","backgroundColor","borderRadius","fontSize","marginTop","paddingLeft","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,UAAT,QAA2B,iBAA3B;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAMb;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,wBAFJC,KAEI;AAAA,MAFJA,KAEI,2BAFI,EAEJ;AAAA,MADJC,eACI,QADJA,eACI;AACJ,SACE,KAAC,UAAD;AACE,IAAA,OAAO,EAAEJ,OADX;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,KAAK,EAAEE,KAHT;AAIE,IAAA,MAAM,EAAE;AAAA,8BACNE,KADM;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,QADV,eACUA,QADV;AAAA,UACoBC,MADpB,eACoBA,MADpB;AAAA,UAEQC,KAFR,SAENC,UAFM,CAEQD,KAFR;AAAA,aAIN,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACE,MAAM,CAACC,KAAR,EAAe;AAAEC,UAAAA,WAAW,EAAEJ,KAAK,GAAG,KAAH,GAAW;AAA/B,SAAf,CAAb;AAAA,kBACE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEH,KADT;AAEE,UAAA,YAAY,EAAEC,QAFhB;AAGE,UAAA,MAAM,EAAEC,MAHV;AAIE,UAAA,WAAW,EAAEN,WAJf;AAKE,UAAA,eAAe,EAAEE;AALnB;AADF,QAJM;AAAA;AAJV,IADF;AAqBD,CA5BD;;AA8BA,IAAMO,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,KAAK,EAAE;AACLI,IAAAA,cAAc,EAAE,QADX;AAELC,IAAAA,KAAK,EAAE,KAFF;AAGLC,IAAAA,MAAM,EAAE,KAHH;AAILC,IAAAA,eAAe,EAAE,SAJZ;AAKLC,IAAAA,YAAY,EAAE,EALT;AAMLP,IAAAA,WAAW,EAAE,oBANR;AAOLQ,IAAAA,QAAQ,EAAE,EAPL;AAQLC,IAAAA,SAAS,EAAE,EARN;AASLC,IAAAA,WAAW,EAAE,CATR;AAULC,IAAAA,WAAW,EAAE,OAVR;AAWLC,IAAAA,YAAY,EAAE;AAAER,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAXT;AAYLQ,IAAAA,aAAa,EAAE,GAZV;AAaLC,IAAAA,YAAY,EAAE;AAbT;AADwB,CAAlB,CAAf;AAkBA,eAAe5B,UAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, TextInput, View } from \"react-native\";\nimport { Controller } from \"react-hook-form\";\n\nconst InputField = ({\n  control,\n  name,\n  placeholder,\n  rules = {},\n  secureTextEntry,\n}) => {\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({\n        field: { value, onChange, onBlur },\n        fieldState: { error },\n      }) => (\n        <View style={[styles.input, { borderColor: error ? \"red\" : \"blue\" }]}>\n          <TextInput\n            value={value}\n            onChangeText={onChange}\n            onBlur={onBlur}\n            placeholder={placeholder}\n            secureTextEntry={secureTextEntry}\n          />\n        </View>\n      )}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    justifyContent: \"center\",\n    width: \"75%\",\n    height: \"10%\",\n    backgroundColor: \"#f2f3f5\",\n    borderRadius: 10,\n    borderColor: \"rgba(37,37,37,255)\",\n    fontSize: 20,\n    marginTop: 12,\n    paddingLeft: 8,\n    shadowColor: \"black\",\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.9,\n    shadowRadius: 10,\n  },\n});\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}