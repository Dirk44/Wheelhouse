{"ast":null,"code":"import React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createAppContainer } from \"react-navigation\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport HomePage from \"../screens/homePage\";\nimport UpcomingShows from \"../screens/upcomingShows\";\nimport Clips from \"../screens/clips\";\nimport Store from \"../screens/store\";\nimport WaitList from \"../screens/waitList\";\nimport NavBar from \"../components/NavBar\";\nimport PlayVideoScreen from \"../screens/playVideoScreen\";\nimport HomeStack from \"./homeStack\";\nimport RentSeries from \"../screens/rentSeries\";\nimport GladiatorsLanding from \"../screens/gladiatorsLanding\";\nimport Episodes from \"../screens/episodes\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WIDTH = Dimensions.get(\"window\").width;\n\nvar navigationOptions = function navigationOptions() {\n  return {\n    headerTitle: function headerTitle() {\n      return _jsx(NavBar, {});\n    }\n  };\n};\n\nvar Drawer = createDrawerNavigator();\n\nvar DrawerNav = function DrawerNav() {\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      swipeEdgeWidth: 0,\n      drawerStyle: {\n        width: WIDTH * 0.6\n      }\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: HomeStack,\n      options: {\n        navigationOptions: navigationOptions,\n        title: \"Home\"\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"GladiatorsLanding\",\n      component: GladiatorsLanding,\n      options: {\n        navigationOptions: navigationOptions,\n        title: \"Gladiators\"\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Clips\",\n      component: Clips,\n      options: {\n        navigationOptions: navigationOptions,\n        title: \"Clips\"\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Episodes\",\n      component: Episodes,\n      options: {\n        navigationOptions: navigationOptions,\n        title: \"Episodes\"\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"UpcomingShows\",\n      component: UpcomingShows,\n      options: {\n        navigationOptions: navigationOptions,\n        title: \"Upcoming Shows\"\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Store\",\n      component: Store,\n      options: {\n        navigationOptions: navigationOptions,\n        title: \"Store\"\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"WaitList\",\n      component: WaitList,\n      options: {\n        navigationOptions: navigationOptions,\n        title: \"Waitlist\"\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Rental\",\n      component: RentSeries,\n      options: {\n        navigationOptions: navigationOptions,\n        title: \"Rental\"\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Video\",\n      component: PlayVideoScreen,\n      options: {\n        navigationOptions: navigationOptions,\n        title: \"Video\"\n      }\n    })]\n  });\n};\n\nexport default DrawerNav;","map":{"version":3,"names":["React","createDrawerNavigator","createAppContainer","Entypo","HomePage","UpcomingShows","Clips","Store","WaitList","NavBar","PlayVideoScreen","HomeStack","RentSeries","GladiatorsLanding","Episodes","WIDTH","Dimensions","get","width","navigationOptions","headerTitle","Drawer","DrawerNav","headerShown","swipeEdgeWidth","drawerStyle","title"],"sources":["/Users/derrickdevilliers/Repos/Wheelhouse/app/routes/drawer.js"],"sourcesContent":["import React from \"react\";\nimport { Dimensions } from \"react-native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createAppContainer } from \"react-navigation\";\nimport { Entypo } from \"@expo/vector-icons\";\n\nimport HomePage from \"../screens/homePage\";\nimport UpcomingShows from \"../screens/upcomingShows\";\nimport Clips from \"../screens/clips\";\nimport Store from \"../screens/store\";\nimport WaitList from \"../screens/waitList\";\nimport NavBar from \"../components/NavBar\";\nimport PlayVideoScreen from \"../screens/playVideoScreen\";\nimport HomeStack from \"./homeStack\";\nimport RentSeries from \"../screens/rentSeries\";\nimport GladiatorsLanding from \"../screens/gladiatorsLanding\";\nimport Episodes from \"../screens/episodes\";\n\nconst WIDTH = Dimensions.get(\"window\").width;\n\nconst navigationOptions = () => {\n  return {\n    headerTitle: () => <NavBar />,\n  };\n};\n\nconst Drawer = createDrawerNavigator();\n\nconst DrawerNav = () => {\n  return (\n    <Drawer.Navigator\n      screenOptions={{\n        headerShown: false,\n        swipeEdgeWidth: 0,\n        drawerStyle: {\n          width: WIDTH * 0.6,\n        },\n      }}\n      // useLegacyImplementation={true}\n    >\n      {/* {!auth && <HomeStack />} */}\n      <Drawer.Screen\n        name=\"Home\"\n        component={HomeStack}\n        options={{\n          navigationOptions: navigationOptions,\n          title: \"Home\",\n        }}\n      />\n\n      <Drawer.Screen\n        name=\"GladiatorsLanding\"\n        component={GladiatorsLanding}\n        options={{\n          navigationOptions: navigationOptions,\n          title: \"Gladiators\",\n        }}\n      />\n\n      <Drawer.Screen\n        name=\"Clips\"\n        component={Clips}\n        options={{\n          navigationOptions: navigationOptions,\n          title: \"Clips\",\n        }}\n      />\n      <Drawer.Screen\n        name=\"Episodes\"\n        component={Episodes}\n        options={{\n          navigationOptions: navigationOptions,\n          title: \"Episodes\",\n        }}\n      />\n      <Drawer.Screen\n        name=\"UpcomingShows\"\n        component={UpcomingShows}\n        options={{\n          navigationOptions: navigationOptions,\n          title: \"Upcoming Shows\",\n        }}\n      />\n\n      <Drawer.Screen\n        name=\"Store\"\n        component={Store}\n        options={{\n          navigationOptions: navigationOptions,\n          title: \"Store\",\n        }}\n      />\n\n      <Drawer.Screen\n        name=\"WaitList\"\n        component={WaitList}\n        options={{\n          navigationOptions: navigationOptions,\n          title: \"Waitlist\",\n        }}\n      />\n      <Drawer.Screen\n        name=\"Rental\"\n        component={RentSeries}\n        options={{\n          navigationOptions: navigationOptions,\n          title: \"Rental\",\n        }}\n      />\n\n      <Drawer.Screen\n        name=\"Video\"\n        component={PlayVideoScreen}\n        options={{\n          navigationOptions: navigationOptions,\n          title: \"Video\",\n        }}\n      />\n    </Drawer.Navigator>\n  );\n};\n\n// (\n//   {\n//     Home: {\n//       screen: HomeStack,\n//       navigationOptions: ({ navigation }) => {\n//         return {\n//           headerTitle: () => <NavBar navigation={navigation} />,\n//         };\n//       },\n//     },\n//     UpcomingShows: {\n//        screen: UpcomingShows,\n//        navigationOptions: {\n//          headerTitle: () => <NavBar />,\n//        },\n//      },\n//     Waitlist: {\n//       screen: WaitList,\n//       // navigationOptions: {\n//       //   headerTitle: () => <NavBar />,\n//       // },\n//     },\n//     Gladiators: {\n//       screen: GladiatorsLandingPage,\n//       // navigationOptions: {\n//       //   headerTitle: () => <NavBar />,\n//       // },\n//     },\n//     Store: {\n//       screen: Store,\n//       // navigationOptions: {\n//       //   headerTitle: () => <NavBar />,\n//       // },\n//     },\n//     VideoScreen: {\n//       screen: PlayVideoScreen,\n//       // navigationOptions: {\n//       //   headerTitle: () => <NavBar />,\n//       // },\n//     },\n//   },\n//   DrawerConfig\n// );\n\nexport default DrawerNav;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}